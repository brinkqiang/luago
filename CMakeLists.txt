cmake_minimum_required(VERSION 3.2)

PROJECT(luago)
INCLUDE(cmake/ModuleImport.cmake)
LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
INCLUDE(cmake/ModuleCompileOptions.cmake)
ModuleSetCompileOptions()

SET(LUAGO_VERSION_MAJOR "1")
SET(LUAGO_VERSION_MINOR "0")
SET(LUAGO_VERSION_PATCH "1")
SET(LUAGO_VERSION "${LUAGO_VERSION_MAJOR}.${LUAGO_VERSION_MINOR}.${LUAGO_VERSION_PATCH}")

MESSAGE(STATUS "VERSION: ${LUAGO_VERSION}")

ADD_DEFINITIONS(-DUSE_LUAGO)
ADD_DEFINITIONS(-DLUA_COMPAT_MODULE -DLUA_COMPAT_APIINTCASTS)
OPTION(USE_LUA_INNER "use lua inner" ON)
OPTION(USE_LUAGO_TEST "use luago test" ON)

#ModuleImport("dmlog" "thirdparty/dmlog")

IF (WIN32)
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/windows)
ENDIF(WIN32)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/lua)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/luago)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/test)

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/bin)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)

IF (USE_LUAGO_TEST)
    FILE(GLOB DMLUA_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/*.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/*.cc
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/*.c
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/*.hpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/*.h
    )

    LIST(FILTER DMLUA_SOURCES EXCLUDE REGEX "lua.c$")
    LIST(FILTER DMLUA_SOURCES EXCLUDE REGEX "luac.c$")
    LIST(FILTER DMLUA_SOURCES EXCLUDE REGEX "wmain.c$")

    FILE(GLOB LUA_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/lua/lua.c
    )
ENDIF(USE_LUAGO_TEST)


FILE(GLOB LUAGO_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/include/*.h

${CMAKE_CURRENT_SOURCE_DIR}/src/luago/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/src/luago/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/luago/*.c
${CMAKE_CURRENT_SOURCE_DIR}/src/luago/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/src/luago/*.h
)

IF (WIN32)
    LIST(APPEND LUAGO_SOURCES)
ENDIF(WIN32)

FILE(GLOB_RECURSE LUAGOTEST_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/test/*.c
${CMAKE_CURRENT_SOURCE_DIR}/test/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.h)

IF (WIN32)
    IF (USE_LUA_INNER)
        ADD_LIBRARY(lua53 SHARED ${DMLUA_SOURCES})
        SET_TARGET_PROPERTIES(lua53 PROPERTIES COMPILE_FLAGS "-DLUA_BUILD_AS_DLL -DLUA_CORE")
        
        ADD_EXECUTABLE(lua ${LUA_SOURCES})
        TARGET_LINK_LIBRARIES(lua lua53)
    ENDIF(USE_LUA_INNER)

    ADD_LIBRARY(luago SHARED ${LUAGO_SOURCES} ${CMAKE_CURRENT_SOURCE_DIR}/src/luago/luago_module.def)
    TARGET_LINK_LIBRARIES(luago lua53)

    SET_TARGET_PROPERTIES(luago PROPERTIES COMPILE_FLAGS "-DLUA_BUILD_AS_DLL -DLUA_LIB")

    IF (USE_LUAGO_TEST)
        ADD_EXECUTABLE(luagotest ${LUAGOTEST_SOURCES})
        TARGET_LINK_LIBRARIES(luagotest luago)
        SET_TARGET_PROPERTIES(luagotest PROPERTIES COMPILE_FLAGS "-DLUA_BUILD_AS_DLL")
    ENDIF(USE_LUAGO_TEST)

ELSEIF (APPLE)
    ADD_DEFINITIONS(-DLUA_USE_MACOSX)
    IF (USE_LUA_INNER)
        ADD_LIBRARY(lua53 SHARED ${DMLUA_SOURCES})
        SET_TARGET_PROPERTIES(lua53 PROPERTIES COMPILE_FLAGS "-Wl,-E" )

        ADD_EXECUTABLE(lua ${LUA_SOURCES})
        TARGET_LINK_LIBRARIES(lua lua53 dl)
    ENDIF(USE_LUA_INNER)

    ADD_LIBRARY(luago SHARED ${LUAGO_SOURCES})
    SET_TARGET_PROPERTIES(luago PROPERTIES COMPILE_FLAGS "-Wl,-E" )
    SET_TARGET_PROPERTIES(luago PROPERTIES PREFIX "")

    TARGET_LINK_LIBRARIES(luago lua53)

    IF (USE_LUAGO_TEST)
        ADD_EXECUTABLE(luagotest ${LUAGOTEST_SOURCES})
        TARGET_LINK_LIBRARIES(luagotest luago)
    ENDIF(USE_LUAGO_TEST)   
ELSEIF (UNIX)
    ADD_DEFINITIONS(-DLUA_USE_LINUX)

    IF (USE_LUA_INNER)
        ADD_LIBRARY(lua53 SHARED ${DMLUA_SOURCES})
        SET_TARGET_PROPERTIES(lua53 PROPERTIES COMPILE_FLAGS "-Wl,-E" )

        ADD_EXECUTABLE(lua ${LUA_SOURCES})
        TARGET_LINK_LIBRARIES(lua lua53 m dl)
    ENDIF(USE_LUA_INNER)

    ADD_LIBRARY(luago SHARED ${LUAGO_SOURCES})
    SET_TARGET_PROPERTIES(luago PROPERTIES COMPILE_FLAGS "-Wl,-E" )
    SET_TARGET_PROPERTIES(luago PROPERTIES PREFIX "")
    TARGET_LINK_LIBRARIES(luago lua53)
    
    IF (USE_LUAGO_TEST)
        ADD_EXECUTABLE(luagotest ${LUAGOTEST_SOURCES})
        TARGET_LINK_LIBRARIES(luagotest luago)
    ENDIF(USE_LUAGO_TEST)   
ENDIF ()

#ADD_CUSTOM_COMMAND(
#TARGET luagotest
#PRE_BUILD
#COMMAND ${CMAKE_COMMAND} -E copy_if_different
#${CMAKE_CURRENT_SOURCE_DIR}/config/test.csv
#$<TARGET_FILE_DIR:luagotest>
#)

#INSTALL(DIRECTORY include/ DESTINATION include)
#INSTALL(TARGETS luago
#        RUNTIME DESTINATION bin
#        LIBRARY DESTINATION lib
#        ARCHIVE DESTINATION lib)

#SET(LUAGO_LIBS "luago")
#MARK_AS_ADVANCED(${LUAGO_LIBS})
